import os
import telebot
from telebot import types

# 1) –¢–æ–∫–µ–Ω –±–µ—Ä—ë–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞ Render
TOKEN = os.getenv("TOKEN")

# 2) –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ PDF —Ä—è–¥–æ–º —Å —ç—Ç–∏–º —Ñ–∞–π–ª–æ–º
PDF_FILE = os.path.join(os.path.dirname(__file__), "brochure.pdf")
ACCESS_CODE = os.getenv("ACCESS_CODE", "VITAMIN-999")
pending_codes = set()  # –∑–¥–µ—Å—å —Ö—Ä–∞–Ω–∏–º user_id, –∫–æ–º—É –∑–∞–ø—Ä–æ—Å–∏–ª–∏ –∫–æ–¥
bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=['start'])
def send_welcome(message):
    text  = "üçÉ –ü—Ä–∏–≤–µ—Ç! –¢—ã –≤ *–¢–≤–æ—ë–º –¥–æ–º–∞—à–Ω–µ–º –≤–∏—Ç–∞–º–∏–Ω–Ω–æ–º –±–∞—Ä–µ*\n\n"
    text += "–ó–¥–µ—Å—å —Å–æ–±—Ä–∞–Ω—ã –ø—Ä–æ—Å—Ç—ã–µ –∏ –≤–∫—É—Å–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–∞—é—Ç –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ —Å–µ–±–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.\n"
    text += "üìò –í –±—Ä–æ—à—é—Ä–µ ‚Äî –±–æ–ª–µ–µ 30 –Ω–∞–ø–∏—Ç–∫–æ–≤ –¥–ª—è –¥–µ—Ç–æ–∫—Å–∞, —ç–Ω–µ—Ä–≥–∏–∏, –∏–º–º—É–Ω–∏—Ç–µ—Ç–∞ –∏ –∫—Ä–∞—Å–æ—Ç—ã –∫–æ–∂–∏.\n"
    text += "üî• –°—Ç–æ–∏–º–æ—Å—Ç—å: 9,90‚Ç¨\n"
    text += "üíß –í—ã–±–µ—Ä–∏ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –Ω–∏–∂–µ –∏ –ø–æ–ª—É—á–∏ —Å–≤–æ—é –±—Ä–æ—à—é—Ä—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.\n"
    text += "üåø –Ø —Å–æ–±—Ä–∞–ª–∞ —ç—Ç–∏ —Ä–µ—Ü–µ–ø—Ç—ã —Å –ª—é–±–æ–≤—å—é, —á—Ç–æ–±—ã –æ–Ω–∏ —Å—Ç–∞–ª–∏ —á–∞—Å—Ç—å—é —Ç–≤–æ–∏—Ö –º–∞–ª–µ–Ω—å–∫–∏—Ö —Ä–∏—Ç—É–∞–ª–æ–≤ –∑–∞–±–æ—Ç—ã –æ —Å–µ–±–µ."

    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton("üí≥ –û–ø–ª–∞—Ç–∏—Ç—å Revolut", url="https://revolut.me/irynaswan/9.90")
    btn2 = types.InlineKeyboardButton("üí≥ –û–ø–ª–∞—Ç–∏—Ç—å PayPal", url="https://paypal.me/IrynaKrasotkina754/9.90EUR")
    btn3 = types.InlineKeyboardButton("üì• –ü–æ–ª—É—á–∏—Ç—å PDF", callback_data="get_pdf")
    markup.add(btn1)
    markup.add(btn2)
    markup.add(btn3)
@bot.callback_query_handler(func=lambda c: c.data == "get_pdf")
def ask_code(call):
    try:
        uid = call.from_user.id
        pending_codes.add(uid)
        bot.answer_callback_query(call.id)
        bot.send_message(
            uid,
            "üßæ –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è PDF –≤–≤–µ–¥–∏—Ç–µ *–∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞* (–µ–≥–æ –≤–∏–¥–Ω–æ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã).",
            parse_mode="Markdown"
        )
    except Exception as e:
        bot.answer_callback_query(call.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å PDF üòî")
        print("PDF error:", e)

@bot.message_handler(func=lambda m: m.from_user.id in pending_codes)
def check_code(msg):
    code = msg.text.strip()
    if code == ACCESS_CODE:
        try:
            with open(PDF_FILE, "rb") as f:
                bot.send_document(
                    msg.chat.id,
                    f,
                    visible_file_name="–û–∑–¥–æ—Ä–æ–≤–∏—Ç–µ–ª—å–Ω—ã–µ_–Ω–∞–ø–∏—Ç–∫–∏.pdf"
                )
            bot.send_message(msg.chat.id, "–ì–æ—Ç–æ–≤–æ! –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–ª–∞—Ç—É üåø")
        except Exception as e:
            bot.send_message(msg.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å PDF üòî")
            print("PDF error:", e)
        finally:
            # –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ —É–±–∏—Ä–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ ¬´–æ–∂–∏–¥–∞—é—â–∏—Ö –∫–æ–¥–∞¬ª
            pending_codes.discard(msg.from_user.id)
    else:
        bot.reply_to(msg, "–ö–æ–¥ –Ω–µ–≤–µ—Ä–Ω—ã–π ‚Äî –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ üòâ")

if __name__ == "__main__":
    bot.infinity_polling(timeout=60, long_polling_timeout=60)
